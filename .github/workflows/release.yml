name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEB_DIR: '${{ github.workspace }}/deb'
  CCACHE_DIR: '${{ github.workspace }}/.ccache'

jobs:
  release:
    strategy:
      matrix:
        os_distro: [jammy, noble]
        arch: [amd64, arm64]
    runs-on: "${{ format('ubuntu-24.04{0}', matrix.arch == 'arm64' && '-arm' || '') }}"
    steps:
      - name: Checkout the project
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Get timestamp
        id: timestamp
        run: echo "timestamp=$(date -u +%Y-%m-%d-%H%M%S)" >> "$GITHUB_OUTPUT"
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: '${{ env.CCACHE_DIR }}'
          key: ccache-${{ matrix.os_distro }}-${{ matrix.arch }}-${{ steps.timestamp.outputs.timestamp }}
          restore-keys: ccache-${{ matrix.os_distro }}-${{ matrix.arch }}-
      - name: Build debian packages
        id: build
        uses: ./
        with:
          os_distro: '${{ matrix.os_distro }}'
          destination: '${{ env.DEB_DIR }}'
          repos_file: 'gazebo.repos'
          ccache_dir: '${{ env.CCACHE_DIR }}'
      - name: Archive generated deb files
        if: ${{ always() && (steps.build.conclusion == 'success' || steps.build.conclusion == 'failure') }}
        run: |
          ls -lFah ${{ env.DEB_DIR }}/
          tar czf deb.tar.gz -C ${{ env.DEB_DIR }} .
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: ${{ always() && (steps.build.conclusion == 'success' || steps.build.conclusion == 'failure') }}
        with:
          name: 'deb-${{ matrix.os_distro }}-${{ matrix.arch }}'
          retention-days: 1
          path: deb.tar.gz
      - name: Release deb files
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: '${{ env.DEB_DIR }}/*.deb'
